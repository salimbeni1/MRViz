/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import AngryMan from './BaseCharacter'
import PhoneMan from './BaseCharacter_phone'

export default function Mrviz_world({ ...props }) {
  const group = useRef()
  const { nodes } = useGLTF('/model3d/mrviz_world.glb')
  const materials = {
    "wheels" : <meshStandardMaterial color={'white'} />,
    "point_cloud" : <meshStandardMaterial color={'#1E90FF'} />,
    "terrain" : <meshStandardMaterial color={'pink'} />,
    "computer" : <meshStandardMaterial color={'black'} />,
    "obstacle" : <meshStandardMaterial color={'#CD853F'} />,
    "screen" : <meshBasicMaterial color={'white'} />,
    "robot" : <meshStandardMaterial color={'grey'} />,
    "lidar" : <meshStandardMaterial color={'black'} />,
    "table" : <meshStandardMaterial color={'#FF4500'} />,
    "wpc" : <meshStandardMaterial color={'#CD5C5C'} />,
    "anchor" : <meshStandardMaterial color={'#DC143C'} />,
  }

  return (
    <group ref={group} {...props} dispose={null}>



      {props.angry ? <AngryMan scale={3} position={[6.95, 1.3, 12.93]}  rotation={[0, 2.6, 0]} /> : <></>}

      {props.phoneMan ? <PhoneMan scale={3} position={[6.95, 1.3, 12.93]}  rotation={[0, 2.6, 0]} /> : <></>}

      <mesh geometry={nodes.terrain.geometry} > {materials["terrain"]} </mesh>

      <mesh geometry={nodes.computer1.geometry} position={[3.71, 7.57, -15.04]} scale={[1.82, 0.21, 1.34]} > {materials["computer"]} </mesh>
      <mesh geometry={nodes.computer2.geometry} position={[3.71, 9.19, -13.06]} rotation={[2.03, 0, 0]} scale={[2, 0.21, 2]} > {materials["computer"]} </mesh>
      <mesh geometry={nodes.screen.geometry}    position={[3.71, 9.19, -13.17]} rotation={[2.03, 0, 0]} scale={[1.63, 0.2, 1.68]} > {materials["screen"]} </mesh>

      
      <mesh geometry={nodes.Cube1.geometry}     position={[2.95, 2.62, 8.93]} scale={1.89} > {materials["obstacle"]} </mesh>
      <mesh geometry={nodes.Cube2.geometry}     position={[12.61, 1.81, 11.24]} > {materials["obstacle"]} </mesh>
      <mesh geometry={nodes.Cube3.geometry}     position={[13.59, 2.62, -9.36]} scale={1.89} > {materials["obstacle"]} </mesh>

      <mesh geometry={nodes.table1.geometry}         position={[2.95, 3.18, -13.81]} scale={[3.94, 3.94, 0.47]} > {materials["table"]} </mesh>
      <mesh geometry={nodes.table2.geometry}      position={[3.26, 6.99, -14.5]} rotation={[Math.PI / 2, 0, 0]} scale={[3.94, 2.34, 0.47]} > {materials["table"]} </mesh>
      
      <mesh geometry={nodes.robot_base.geometry}    position={[5.93, 2.62, -1.27]} rotation={[0, 0.59, 0]} scale={[1, 1, 1.78]} > {materials["robot"]} </mesh>
      <mesh geometry={nodes.pole1.geometry}        position={[6.45, 3.71, -0.52]} rotation={[0, 0.59, 0]} scale={[0.21, 1, 0.21]} > {materials["robot"]} </mesh>
      <mesh geometry={nodes.lidar.geometry}          position={[6.49, 4.68, -0.53]} rotation={[0, 0.59, 0]} scale={[1, 0.31, 1]} > {materials["lidar"]} </mesh>
      <mesh geometry={nodes.pole2.geometry}        position={[5.36, 3.4, -2.16]} rotation={[0, 0.59, 0]} scale={[0.21, 1, 0.21]} > {materials["robot"]} </mesh>
      <mesh geometry={nodes.Cylinder.geometry}       position={[5.73, 2, 0.43]} rotation={[0, 0.59, -Math.PI / 2]} scale={[1, 0.31, 1]} > {materials["wheels"]} </mesh>
      <mesh geometry={nodes.Cylinder001.geometry}    position={[4.32, 2, -1.69]} rotation={[0, 0.59, -Math.PI / 2]} scale={[1, 0.31, 1]} > {materials["wheels"]} </mesh>
      <mesh geometry={nodes.Cylinder002.geometry}    position={[6.21, 2, -2.95]} rotation={[0, 0.59, -Math.PI / 2]} scale={[1, 0.31, 1]} > {materials["wheels"]} </mesh>
      <mesh geometry={nodes.Cylinder003.geometry}   position={[7.62, 2, -0.83]} rotation={[0, 0.59, -Math.PI / 2]} scale={[1, 0.31, 1]} > {materials["wheels"]} </mesh>
      
      { props.pc ? <>
      <mesh geometry={nodes.Cube.geometry}     position={[0, 2.3, 6.6]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube001.geometry}  position={[1.67, 2.3, 6.6]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube002.geometry}  position={[3.18, 2.3, 6.6]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube003.geometry}  position={[5.01, 2.3, 6.6]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube004.geometry}  position={[6.64, 2.3, 6.6]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube005.geometry}  position={[14.01, 2.3, 9.85]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube006.geometry}  position={[13.1, 2.3, 9.85]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube007.geometry}  position={[12.02, 2.3, 9.85]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube008.geometry}  position={[10.79, 2.3, 9.85]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube009.geometry}  position={[10.79, 2.3, 10.59]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube010.geometry}  position={[10.79, 2.3, 11.24]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube011.geometry}  position={[11.01, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube012.geometry}  position={[11.88, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube013.geometry}  position={[12.77, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube014.geometry}  position={[13.81, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube015.geometry}  position={[14.79, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube016.geometry}  position={[15.6, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube017.geometry}  position={[16.48, 2.3, -7.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube018.geometry}  position={[11.01, 2.3, -8.05]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube019.geometry}  position={[11.01, 2.3, -9.17]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube020.geometry}  position={[6.23, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube021.geometry}  position={[5.48, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube022.geometry}  position={[4.71, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube023.geometry}  position={[4.01, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube024.geometry}  position={[3.22, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube025.geometry}  position={[2.49, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube026.geometry}  position={[1.54, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube027.geometry}  position={[0.66, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube028.geometry}  position={[-0.24, 2.3, -12.93]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube029.geometry}  position={[6.64, 2.3, 7.36]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube030.geometry}  position={[6.64, 2.3, 8.26]} scale={0.23} > {materials["point_cloud"]} </mesh>
      <mesh geometry={nodes.Cube031.geometry}  position={[6.64, 2.3, 9.24]} scale={0.23} > {materials["point_cloud"]} </mesh>
      </> : <></>}

      { props.wpc ? <>
      <mesh geometry={nodes.wpc.geometry}  position={[15.02, 2.3, -0.27]} scale={0.23} > {materials["wpc"]} </mesh>
      <mesh geometry={nodes.wpc1.geometry}  position={[15.51, 2.3, 0.61]} scale={0.23} > {materials["wpc"]} </mesh>
      <mesh geometry={nodes.wpc1001.geometry}  position={[15.84, 2.3, 1.51]} scale={0.23} > {materials["wpc"]} </mesh>
      <mesh geometry={nodes.wpc1002.geometry}  position={[16.48, 2.3, 2.37]} scale={0.23} > {materials["wpc"]} </mesh>
      <mesh geometry={nodes.wpc001.geometry}  position={[15.02, 2.3, -1.13]} scale={0.23} > {materials["wpc"]} </mesh>
      <mesh geometry={nodes.wpc002.geometry}  position={[15.53, 2.3, -2.09]} scale={0.23} > {materials["wpc"]} </mesh>
        </> : <></>}

      { props.base_frame ? <>
      <mesh geometry={nodes.world_frame.geometry}  position={[16.34, 3.35, 2.35]} scale={0.73} > {materials["anchor"]} </mesh>
      <mesh geometry={nodes.base.geometry} position={[16.37, 0.17, 2.36]} > {materials["anchor"]} </mesh>
      <mesh geometry={nodes.path.geometry}  position={[11.37, 1.03, 0.89]} rotation={[0, -0.3, 0]} scale={[5.05, 0.08, 0.08]} > {materials["anchor"]} </mesh>
      </>:<></>}

      { props.world_frame ? <>
      <mesh geometry={nodes.robot_frame.geometry} position={[6.12, 7.54, -1.31]} scale={0.73} > {materials["anchor"]} </mesh>
      </>:<></>}
   
    </group>
  )
}

useGLTF.preload('/model3d/mrviz_world.glb')
